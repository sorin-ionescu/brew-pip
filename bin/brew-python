#!/usr/bin/env python

import os
import sys
import tempfile
import xmlrpclib
import re


if __name__ != '__main__':
    raise ImportError('File is executable: {0}'.format(__file__))


def abort(msg):
    sys.stderr.write(msg)
    sys.exit(1)


client = xmlrpclib.ServerProxy('http://pypi.python.org/pypi')
name = None
url = None
homepage = None
version = None
options = []
packages = []

for arg in sys.argv[1:]:
    if re.match('^-{1,2}[A-Za-z0-9]+', arg):
        options.append(arg)
        continue

    try:
        releases = client.package_releases(arg)
    except:
        abort("Error: Cannot get package releases: {0}\n".format(arg))
    if len(releases) == 0:
        abort("Error: Cannot find a valid package: {0}\n".format(arg))
    try:
        main_release = releases[0]
        data = client.release_data(arg, main_release)
    except:
        abort("Error: Cannot get package release data: {0}\n".format(arg))

    packages.append("['{0}', '{1}']".format(data['name'], data['version']))
    if name is None:
        name = data['name'].lower()
        version = data['version']
        url = data['download_url']
        homepage = data['home_page']

if name is None:
    abort("Usage: brew python [--option] <name> [dependency ...])\n")

klass = ''.join(map(str.capitalize, re.findall('[a-zA-Z0-9]+', name)))
formula = os.path.join(tempfile.gettempdir(), 'python-{0}.rb'.format(name))
formula_contents = '''
require 'formula'

class NopDownloadStrategy < AbstractDownloadStrategy
  def fetch; Pathname.new ''; end
  def stage; Pathname.new ''; end
  def cached_location; Pathname.new ''; end
end

class PipInstalled < Requirement
  fatal true

  satisfy do
    which 'bundle'
  end

  def message; <<-EOS.undent
    pip is required to install.

    You can install it with:
      easy_install pip

    You can read more about pip at:
      http://www.pip-installer.org/en/latest/
    EOS
  end
end

class VirtualenvInstalled < Requirement
  fatal true

  satisfy do
    which 'virtualenv'
  end

  def message; <<-EOS.undent
    virtualenv is required to install.

    You can install it with:
      pip install virtualenv

    You can read more about virtualenv at:
      http://www.virtualenv.org/en/latest/
    EOS
  end
end

class Python{klass} < Formula
  url '{url}', :using => NopDownloadStrategy
  homepage '{homepage}'
  version '{version}'

  depends_on PipInstalled
  depends_on VirtualenvInstalled

  def install
    Dir.chdir prefix

    environment = File.join libexec, name
    pip = File.join environment, 'bin', 'pip'

    open('requirements.txt', 'w') do |f|
      [{packages}].each do |p|
        f.puts "#{{p.first}}==#{{p.last}}"
      end
    end

    system 'virtualenv', environment
    system pip, 'install', '-r', 'requirements.txt'
    system 'virtualenv', '--relocatable', environment

    bin.mkpath
    `#{{pip}} show -f {name}`.lines.each do |l|
      next unless l =~ /\/bin\//
      f = File.basename(l.strip)
      File.symlink(File.join(environment, 'bin', f), File.join(bin, f))
    end
  end
end
'''.strip().format(
    klass=klass,
    url=url,
    homepage=homepage,
    version=version,
    name=name,
    packages=', '.join(packages))

try:
    f = open(formula, 'w')
    f.write("{0}\n".format(formula_contents))
except IOError:
    abort("Error: Cannot write formula: {0}\n".format(formula))
finally:
    f.close()

os.system('brew install --env=std {0} {1}'.format(' '.join(options), formula))
os.remove(formula)
