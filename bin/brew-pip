#!/usr/bin/env python

import os
import sys
import tempfile
import xmlrpclib
import re

argv = sys.argv
if len(argv) < 2:
    sys.stderr.write("Please specify a package name (e.g. brew pip <name>)\n")
    exit(1)


verbose = False
if "-v" in argv:
    argv.remove("-v")
    verbose = True
elif "--version" in argv:
    argv.remove("--version")
    verbose = True


client = xmlrpclib.ServerProxy('http://pypi.python.org/pypi')

releases = client.package_releases(argv[1])

if len(releases) == 0:
    sys.stderr.write("Could not find a valid package '%s'\n" % argv[1])
    exit(1)

main_release = releases[0]
data    = client.release_data(argv[1], main_release)
name    = data['name'].lower()
klass   = "".join(map(str.capitalize, re.findall('[a-zA-Z0-9]+', data['name'])))

filename = "%s/%s.rb" % (tempfile.gettempdir(), name)
f = open(filename, 'w')

formula_contents = """
require 'formula'

class PipFormula < Formula
  class NoopDownloadStrategy < AbstractDownloadStrategy
    def fetch; end
    def stage; end
  end

  def download_strategy
    NoopDownloadStrategy
  end

  def install
    system "pip", "install", "#{name}==#{version}",
      "--install-option=--prefix=#{prefix}"
  end
end

class %(klass)s < PipFormula
  url "%(url)s"
  version "%(version)s"
  homepage "%(homepage)s"
  env :userpaths
end
""".strip() % {'klass': klass, 'url': data['download_url'], 'homepage': data['home_page'], 'version': data['version']}

f.write(formula_contents+"\n")
f.close()

verbose_switch = ""
if verbose:
    verbose_switch = "-v"
    print "Formula is:"
    print formula_contents


os.system("brew install %s %s" % (verbose_switch, filename))
os.remove(filename)
